{"ast":null,"code":"var _jsxFileName = \"/Users/tianqili/crwn-clothing/client/src/components/collection-item/CollectionItem.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/CustomButton';\nimport { addItem } from '../../redux/cart/CartActions';\nimport './CollectionItem.scss';\n\nconst CollectionItem = ({\n  item,\n  addItem\n}) => {\n  const imageUrl = item.imageUrl,\n        name = item.name,\n        price = item.price;\n  return React.createElement(\"div\", {\n    className: \"collection-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: \"url(\".concat(imageUrl, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"collection-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, name), React.createElement(\"span\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, price)), React.createElement(CustomButton, {\n    onClick: () => addItem(item),\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Add to cart\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);","map":{"version":3,"sources":["/Users/tianqili/crwn-clothing/client/src/components/collection-item/CollectionItem.js"],"names":["React","connect","CustomButton","addItem","CollectionItem","item","imageUrl","name","price","backgroundImage","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAAQC,OAAR,QAAsB,8BAAtB;AACA,OAAO,uBAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOF,EAAAA;AAAP,CAAD,KAAqB;AAAA,QACnCG,QADmC,GACVD,IADU,CACnCC,QADmC;AAAA,QACzBC,IADyB,GACVF,IADU,CACzBE,IADyB;AAAA,QACnBC,KADmB,GACVH,IADU,CACnBG,KADmB;AAE1C,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,gBAASH,QAAT;AADV,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBC,IAAxB,CADF,EAEE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBC,KAAzB,CAFF,CANJ,EAUI,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE,MAAML,OAAO,CAACE,IAAD,CADxB;AAEE,IAAA,QAAQ,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVJ,CADF;AAkBD,CApBD;;AAsBA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACtCR,EAAAA,OAAO,EAAEE,IAAI,IAAIM,QAAQ,CAACR,OAAO,CAACE,IAAD,CAAR;AADa,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAP,CAAkCN,cAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nimport CustomButton from '../custom-button/CustomButton';\nimport {addItem} from '../../redux/cart/CartActions';\nimport './CollectionItem.scss';\n\nconst CollectionItem = ({item, addItem}) => {\n  const {imageUrl, name, price} = item;\n  return (\n    <div className=\"collection-item\">\n      <div\n        className=\"image\"\n        style={{\n          backgroundImage: `url(${imageUrl})`\n        }} />\n        <div className=\"collection-footer\">\n          <span className=\"name\">{name}</span>\n          <span className=\"price\">{price}</span>\n        </div>\n        <CustomButton\n          onClick={() => addItem(item)}\n          inverted>\n          Add to cart\n        </CustomButton>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item)),\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n"]},"metadata":{},"sourceType":"module"}