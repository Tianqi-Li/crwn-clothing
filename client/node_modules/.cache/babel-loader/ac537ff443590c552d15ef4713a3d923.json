{"ast":null,"code":"var _jsxFileName = \"/Users/tianqili/crwn-clothing/src/pages/shop/ShopPage.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport CollectionPage from '../collection/CollectionPage';\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/ShopActions';\nimport { selectIsCollectionFetching } from '../../redux/shop/ShopSelectors';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/tianqili/crwn-clothing/src/pages/shop/ShopPage.js"],"names":["React","Route","connect","createStructuredSelector","CollectionsOverview","CollectionPage","WithSpinner","fetchCollectionsStartAsync","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,SAAQC,0BAAR,QAAyC,8BAAzC;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMM,yBAAyB,GAAGJ,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,UACXN,0BADW,GACmB,KAAKO,KADxB,CACXP,0BADW;AAElBA,IAAAA,0BAA0B;AAC3B;;AAEDQ,EAAAA,MAAM,GAAG;AAAA,wBAC+B,KAAKD,KADpC;AAAA,UACAE,KADA,eACAA,KADA;AAAA,UACOC,oBADP,eACOA,oBADP;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFN;AAGE,MAAA,MAAM,EACJJ,KAAK,IAAI,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKE,KAAK,CAACE,IAAX,mBADN;AAEE,MAAA,MAAM,EACJJ,KAAK,IAAI,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAgEH,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AAzBoC;;AA4BvC,MAAMK,eAAe,GAAGhB,wBAAwB,CAAC;AAC/Cc,EAAAA,oBAAoB,EAAET;AADyB,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtCd,EAAAA,0BAA0B,EAAE,MAAMc,QAAQ,CAACd,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeL,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\n\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport CollectionPage from '../collection/CollectionPage';\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\n\nimport {fetchCollectionsStartAsync} from '../../redux/shop/ShopActions';\nimport {selectIsCollectionFetching} from '../../redux/shop/ShopSelectors';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {fetchCollectionsStartAsync} = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {match, isCollectionFetching} = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={\n            props => <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />\n          }\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={\n            props => <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} />\n          }\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}