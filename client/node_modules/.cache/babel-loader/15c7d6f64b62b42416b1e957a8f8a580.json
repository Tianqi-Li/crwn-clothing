{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE } from './ShopActions';\nimport ShopActionTypes from './ShopTypes';\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => {\n    dispatch(fetchCollectionsFailure(error.message));\n  });\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/tianqili/crwn-clothing/src/redux/shop/ShopSagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionsMap","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,oBAAxB;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SAAQC,yBAAR,EAAmCC,yBAAnC,QAAmE,eAAnE;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACAC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AACAH,EAAAA,aAAa,CAACI,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,UAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAJ,IAAAA,QAAQ,CAACM,uBAAuB,CAACD,cAAD,CAAxB,CAAR;AACD,GAHD,EAGGE,KAHH,CAGSC,KAAK,IAAI;AAChBR,IAAAA,QAAQ,CAACS,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAAR;AACD,GALD;AAMD;AAED,OAAO,UAAUT,qBAAV,GAAkC;AACvC,QAAMV,SAAS,CACbK,eAAe,CAACe,uBADH,EAEbd,qBAFa,CAAf;AAID","sourcesContent":["import {takeEvery} from 'redux-saga/effects';\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\nimport {FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE} from './ShopActions';\n\nimport ShopActionTypes from './ShopTypes';\n\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => {\n    dispatch(fetchCollectionsFailure(error.message));\n  });\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync,\n  );\n}\n"]},"metadata":{},"sourceType":"module"}